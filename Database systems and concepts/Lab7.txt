 Lab7 

-- 1.Reverse engineer the world database so that you can use it to help with your queries. Take a screenshot.


-- 2.Using a UNION query, create a report that lists the name and the district of the cities in Canada 
-- (code CAN) and the Netherlands (code NLD). Note that this query can be written without using a UNION. The purpose of this question is to use UNION. (city table)


SELECT 
    name, CountryCode
FROM
    city
WHERE
    CountryCode = 'CAN' 
UNION SELECT 
    District, CountryCode
FROM
    city
WHERE
    CountryCode = 'NLD';



-- 3.Using an INNER JOIN..ON, create a report that list the name of cities, the country and the indepyear of all countries whose indepYear field is not null. (city and country tables).

SELECT 
    city.name,cy.name, cy.IndepYear
FROM
    city
        INNER JOIN
    country AS cy ON city.CountryCode = cy.Code
and
    IndepYear IS NOT NULL;


-- 4.Rewrite the previous query using WHERE/FROM.

SELECT 
    city.name, cy.name, cy.IndepYear
FROM
    city,
    country AS cy
WHERE
    city.CountryCode = cy.Code
        AND IndepYear IS NOT NULL;


-- 5.Using a subquery, list the name of the city, the countrycode, the population and the average city population of all cities with a population less than the average population. (city table)

SELECT 
    CountryCode,
    Population,
    (SELECT 
            AVG(population)
        FROM
            city) AS AVG_Population
FROM
    city
WHERE
    population < (SELECT 
            AVG(population)
        FROM
            city)
ORDER BY population DESC;

-- 6.Using INNER JOIN ..ON, write a query that displays, for the city of Toronto, the name of the city and the head of state of its country. (city and country tables)

SELECT 
    c.name, cy.HeadOfState, c.countrycode
FROM
    city AS c
        INNER JOIN
    country AS cy ON c.countrycode = cy.Code
WHERE
    c.name = 'Toronto';


-- 7.Using INNER JOIN ..ON the three tables, write a query that displays the name of the city, the city continent, the city head of state, the year of independance and the percentage of people who speaks English in the city of Toronto. (city, countrylanguage and country tables)
SELECT 
    c.name,
    cy.Continent,
    cy.HeadOfState,
    cy.IndepYear,
    cl.Percentage,
    cl.Language,
    (c.Population * cl.Percentage/ 100) AS total_English_Speakers
FROM
    city AS c
        INNER JOIN
    country AS cy ON c.CountryCode = cy.Code
        INNER JOIN
    countrylanguage AS cl ON c.CountryCode = cl.CountryCode
        AND cl.Language = 'English'
        AND c.name = 'Toronto';


-- 8.Rewrite the previous query using WHERE/FROM.

SELECT 
    c.name,
    cy.Continent,
    cy.HeadOfState,
    cy.IndepYear,
    cl.Percentage,
    cl.Language,
    (c.Population * cl.Percentage / 100) AS total_English_Speakers
FROM
    city AS c,
    country AS cy,
    countrylanguage AS cl
WHERE
    c.CountryCode = cy.Code
        AND c.CountryCode = cl.CountryCode
        AND cl.Language = 'English'
        AND c.name = 'Toronto';


-- 9.Using a subquery, list the name of the city, the countrycode and the population of the city with the largest population. (city table)

SELECT 
    c.name, c.countrycode, c.population
FROM
    city AS c
WHERE
    population = (SELECT 
            MAX(population)
        FROM
            city)
ORDER BY population DESC;

-- 10.Using a subquery, list the name of the city, the countrycode and the population of all the cities whose population is larger than the average population. (city table)

SELECT 
    c.name,
    c.countrycode,
    c.population,
    (SELECT 
            AVG(population)
        FROM
            city) AS AVG_Population
FROM
    city AS c
WHERE
    population > (SELECT 
            AVG(population)
        FROM
            city)
ORDER BY population;


-- 11.What is wrong with the following subquery?
-- SELECT name,countrycode,population,avg(population)
-- FROM cityWHERE population > (SELECT avg(population) FROM city)

-- it is better to put average of population in a subquery if we want to diplay in our table in select part .

SELECT 
    name, countrycode, population
FROM
    city
WHERE
    population > (SELECT 
            AVG(population)
        FROM
            city)
ORDER BY Population DESC;



-- 12.Replace the first avg(population) with (SELECT AVG(population) from city)What happens? Why?

-- show all of the city with this avg population in table 

SELECT 
    name,
    countrycode,
    population,
    (SELECT 
            AVG(population)
        FROM
            city) AS avg_pop
FROM
    city
WHERE
    population > (SELECT 
            AVG(population)
        FROM
            city)
ORDER BY Population DESC;


-- 13.Using a subquery, list the name of the country, the continent and the life expectancy of all countries whose life expectancy is less thanthe average life expectancy. (country table)

SELECT 
    name, continent, LifeExpectancy
FROM
    country
WHERE
    LifeExpectancy < (SELECT 
            AVG(LifeExpectancy)
        FROM
            country)
ORDER BY LifeExpectancy DESC;